diff -ur proftpd-1.2.0rc2.orig/src/log.c proftpd-1.2.0rc2/src/log.c
--- proftpd-1.2.0rc2.orig/src/log.c	Wed Jul 26 13:03:17 2000
+++ proftpd-1.2.0rc2/src/log.c	Wed Aug  9 17:14:50 2000
@@ -31,6 +31,9 @@
  *   Also added a command line argument (-d,--debug) to alter the
  *   debug level at runtime.  See main.c.
  */
+#ifdef LINUX
+#define __USE_GNU
+#endif
 
 #include "conf.h"
 
@@ -529,21 +532,11 @@
 
 int log_wtmp(char *line, char *name, char *host, p_in_addr_t *ip)
 {
-  struct stat buf;
-  struct utmp ut;
   int res = 0;
-  static int fd = -1;
 
-#if defined(SVR4) || defined(__SVR4)
-#if !(defined(LINUX) || defined(__hpux) || defined (_AIX))
+#ifdef HAVE_UTMPX_H
   /* This "auxilliary" utmp doesn't exist under linux. */
   struct utmpx utx;
-  static int fdx = -1;
-
-  if(fdx < 0 && (fdx = open(WTMPX_FILE, O_WRONLY | O_APPEND, 0)) < 0) {
-    log_pri(LOG_WARNING,"wtmpx %s: %s",WTMPX_FILE,strerror(errno));
-    return -1;
-  }
 
   /* Unfortunately, utmp string fields are terminated by '\0' if they are
    * shorter than the size of the field, but if they are exactly the size of
@@ -551,13 +544,11 @@
    * Insane if you ask me.  Unless there's massive uproar, I prefer to err on
    * the side of caution and always null-terminate our strings.
    */
-  if(fstat(fdx,&buf) == 0) {
     memset(&utx,0,sizeof(utx));
     sstrncpy(utx.ut_user,name,sizeof(utx.ut_user));
     sstrncpy(utx.ut_id,"ftp",sizeof(utx.ut_user));
     sstrncpy(utx.ut_line,line,sizeof(utx.ut_line));
     sstrncpy(utx.ut_host,host,sizeof(utx.ut_host));
-    utx.ut_syslen = strlen(utx.ut_host)+1;
     utx.ut_pid = getpid();
     time(&utx.ut_tv.tv_sec);
     if(*name)
@@ -566,22 +557,11 @@
       utx.ut_type = DEAD_PROCESS;
     utx.ut_exit.e_termination = 0;
     utx.ut_exit.e_exit = 0;
-    if(write(fdx,(char*)&utx,sizeof(utx)) != sizeof(utx))
-      ftruncate(fdx, buf.st_size);
-  } else {
-    log_debug(DEBUG0,"%s fstat(): %s",WTMPX_FILE,strerror(errno));
-    res = -1;
-  }
+    updwtmpx(_PATH_WTMP, &utx);
 
-#endif
-#endif /* SVR4 */
+#else
+  struct utmp ut;
 
-  if(fd < 0 && (fd = open(WTMP_FILE,O_WRONLY|O_APPEND,0)) < 0) {
-    log_pri(LOG_WARNING,"wtmp %s: %s",WTMP_FILE,strerror(errno));
-    return -1;
-  }
- 
-  if(fstat(fd,&buf) == 0) {
     memset(&ut,0,sizeof(ut));
 #ifdef HAVE_UTMAXTYPE
 #ifdef LINUX
@@ -612,12 +592,8 @@
 #endif /* HAVE_UT_UT_HOST */
 
     time(&ut.ut_time);
-    if(write(fd,(char*)&ut,sizeof(ut)) != sizeof(ut))
-      ftruncate(fd,buf.st_size);
-  } else {
-    log_debug(DEBUG0,"%s fstat(): %s",WTMP_FILE,strerror(errno));
-    res = -1;
-  }
+    updwtmp(_PATH_WTMP, &ut);
+#endif
 
   return res;
 }
